// Generated by CoffeeScript 1.10.0
(function() {
  var Action, LogAction, util,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty,
    slice = [].slice;

  util = require('util');

  Action = require('./action');

  LogAction = (function(superClass) {
    extend(LogAction, superClass);


    /**
     * @protected
     * @type {string}
     */

    LogAction.prototype._level = '';


    /**
     * @protected
     * @type {string}
     */

    LogAction.prototype._message = '';


    /**
     * @override
     */

    function LogAction(parent, config) {
      this.run = bind(this.run, this);
      LogAction.__super__.constructor.call(this, parent, config);
      this._level = this._checkConfig(config, 'level', ['in', 'fatal', 'error', 'warn', 'info', 'debug', 'trace'], 'info');
      this._message = this._checkConfig(config, 'message', 'string');
    }


    /**
     * @override
     */

    LogAction.prototype.run = function() {
      var args, bridge;
      bridge = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];
      return bridge.log(this._level, util.format.apply(util, [this._message].concat(slice.call(args))));
    };

    return LogAction;

  })(Action);

  module.exports = LogAction;

}).call(this);

//# sourceMappingURL=log-action.js.map
