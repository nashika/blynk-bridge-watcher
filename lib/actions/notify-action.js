// Generated by CoffeeScript 1.10.0
(function() {
  var Action, NotifyAction,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty,
    slice = [].slice;

  Action = require('./action');

  NotifyAction = (function(superClass) {
    extend(NotifyAction, superClass);


    /**
     * @protected
     * @type {string}
     */

    NotifyAction.prototype._notifier = '';


    /**
     * @public
     * @type {string}
     */

    NotifyAction.prototype.message = '';


    /**
     * @override
     */

    function NotifyAction(parent, config, index) {
      this.run = bind(this.run, this);
      NotifyAction.__super__.constructor.call(this, parent, config, index);
      this._notifier = this._checkConfig(config, 'notifier', 'string');
      this.message = this._checkConfig(config, 'message', 'string');
    }


    /**
     * @override
     */

    NotifyAction.prototype.run = function() {
      var args, caller, ref;
      caller = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];
      return (ref = caller.parent.parent.notifiers[this._notifier]).emit.apply(ref, ['notify', this].concat(slice.call(args)));
    };

    return NotifyAction;

  })(Action);

  module.exports = NotifyAction;

}).call(this);

//# sourceMappingURL=notify-action.js.map
