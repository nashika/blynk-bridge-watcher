// Generated by CoffeeScript 1.10.0
(function() {
  var Action, ReadAction,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty,
    slice = [].slice;

  Action = require('./action');

  ReadAction = (function(superClass) {
    extend(ReadAction, superClass);


    /**
     * @protected
     */

    ReadAction.prototype._pinType = '';


    /**
     * @protected
     * @type {number}
     */

    ReadAction.prototype._pin = -1;


    /**
     * @override
     */

    function ReadAction(parent, config, index) {
      this.run = bind(this.run, this);
      ReadAction.__super__.constructor.call(this, parent, config, index);
      this.notifier = this._checkConfig(config, 'notifier', 'string');
      this.message = this._checkConfig(config, 'message', 'string');
    }


    /**
     * @override
     */

    ReadAction.prototype.run = function() {
      var args, caller;
      caller = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];
      return caller.notify.apply(caller, [this].concat(slice.call(args)));
    };

    return ReadAction;

  })(Action);

  module.exports = ReadAction;

}).call(this);

//# sourceMappingURL=read-action.js.map
