// Generated by CoffeeScript 1.10.0
(function() {
  var ActionGenerator, Base, CustomAction, NotifyAction,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Base = require('../base');

  NotifyAction = require('./notify-action');

  CustomAction = require('./custom-action');

  ActionGenerator = (function(superClass) {
    extend(ActionGenerator, superClass);


    /**
     * @override
     */

    ActionGenerator.prototype.TYPE = 'ActionGenerator';

    function ActionGenerator(parent) {
      this.generate = bind(this.generate, this);
      var config;
      config = {
        name: 'generator'
      };
      ActionGenerator.__super__.constructor.call(this, parent, config, -1);
    }

    ActionGenerator.prototype.generate = function(parent, config, index) {
      this.checkConfig(config.type, 'config.type', 'string');
      switch (config.type) {
        case 'notify':
          return new NotifyAction(parent, config, index);
        default:
          this.log('fatal', "Action type '" + config.type + "' is not defined.");
          return process.exit(1);
      }
    };

    return ActionGenerator;

  })(Base);

  module.exports = ActionGenerator;

}).call(this);

//# sourceMappingURL=action-generator.js.map
