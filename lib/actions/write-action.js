// Generated by CoffeeScript 1.10.0
(function() {
  var PinAction, WriteAction,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty,
    slice = [].slice;

  PinAction = require('./pin-action');

  WriteAction = (function(superClass) {
    extend(WriteAction, superClass);


    /**
     * @protected
     * @type {number}
     */

    WriteAction.prototype._value = -1;


    /**
     * @override
     */

    function WriteAction(parent, config) {
      this.run = bind(this.run, this);
      WriteAction.__super__.constructor.call(this, parent, config);
      this._value = this._checkConfig(config, 'value', 'number');
    }


    /**
     * @override
     */

    WriteAction.prototype.run = function() {
      var args, bridge;
      bridge = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];
      this.log('debug', "Write action. type=" + this._pinType + ", pin=" + this._pin + ", value=" + this._value);
      return bridge.write(this._pinType, this._pin, this._value);
    };

    return WriteAction;

  })(PinAction);

  module.exports = WriteAction;

}).call(this);

//# sourceMappingURL=write-action.js.map
