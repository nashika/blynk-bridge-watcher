// Generated by CoffeeScript 1.10.0
(function() {
  var Event, NotifyEvent,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty,
    slice = [].slice;

  Event = require('./Event');

  NotifyEvent = (function(superClass) {
    extend(NotifyEvent, superClass);


    /**
     * @public
     * @type {string}
     */

    NotifyEvent.prototype.notifier = '';


    /**
     * @public
     * @type {string}
     */

    NotifyEvent.prototype.message = '';

    function NotifyEvent(parent, config, index) {
      this.run = bind(this.run, this);
      NotifyEvent.__super__.constructor.call(this, parent, config, index);
      this.checkConfig(config.notifier, 'config.notifier', 'string');
      this.notifier = config.notifier;
      this.checkConfig(config.message, 'config.message', 'string');
      this.message = config.message;
    }

    NotifyEvent.prototype.run = function() {
      var args, caller;
      caller = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];
      this.log('debug', "Notify started.");
      return caller.notify.apply(caller, [this].concat(slice.call(args)));
    };

    return NotifyEvent;

  })(Event);

  module.exports = NotifyEvent;

}).call(this);

//# sourceMappingURL=NotifyEvent.js.map
