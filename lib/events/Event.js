// Generated by CoffeeScript 1.10.0
(function() {
  var Base, Event,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty,
    slice = [].slice;

  Base = require('../Base');

  Event = (function(superClass) {
    extend(Event, superClass);


    /**
     * @override
     */

    Event.prototype.TYPE = 'Event';


    /**
     * @protected
     * @type {string}
     */

    Event.prototype.event = '';


    /**
     * @override
     */

    function Event(parent, config, index) {
      this.run = bind(this.run, this);
      Event.__super__.constructor.call(this, parent, config, index);
      this.checkConfig(config.event, 'config.event', 'string');
      this.event = config.event;
    }


    /**
     * @public
     * @param {Base} caller
     */

    Event.prototype.run = function() {
      var args, caller;
      caller = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];
      this.log('debug', "Notify started.");
      return caller.emit.apply(caller, [this.event, caller].concat(slice.call(args)));
    };

    return Event;

  })(Base);

  module.exports = Event;

}).call(this);

//# sourceMappingURL=Event.js.map
