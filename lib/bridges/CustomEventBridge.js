// Generated by CoffeeScript 1.10.0
(function() {
  var BuiltInEventBridge, CustomEventBridge, EventGenerator,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  BuiltInEventBridge = require('./BuiltInEventBridge');

  EventGenerator = require('../events/EventGenerator');

  CustomEventBridge = (function(superClass) {
    extend(CustomEventBridge, superClass);


    /**
     * @protected
     * @type {Object.<Event>
     */

    CustomEventBridge.prototype._events2 = null;


    /**
     * @override
     */

    function CustomEventBridge(parent, config, index) {
      var eventConfig, eventGenerator, i, j, len, ref;
      CustomEventBridge.__super__.constructor.call(this, parent, config, index);
      this._events2 = {};
      i = 0;
      if (config.events) {
        eventGenerator = new EventGenerator(this);
        this.checkConfig(config.events, 'config.events', 'array');
        this.log('debug', "Construct event objects was started.");
        ref = config.events;
        for (j = 0, len = ref.length; j < len; j++) {
          eventConfig = ref[j];
          this._events2[eventConfig.name] = eventGenerator.generate(this, eventConfig, i);
          this.on(eventConfig.name, this._events2[eventConfig.name].run);
        }
        this.log('debug', "Construct event objects was finished.");
      }
    }

    return CustomEventBridge;

  })(BuiltInEventBridge);

  module.exports = CustomEventBridge;

}).call(this);

//# sourceMappingURL=CustomEventBridge.js.map
