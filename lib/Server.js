// Generated by CoffeeScript 1.10.0
(function() {
  var Board, Server,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    slice = [].slice;

  Board = require('./Board');

  Server = (function() {

    /**
     * @protected
     * @type {Logger}
     */
    Server.prototype._logger = null;


    /**
     * @protected
     * @type {Object.<Board>}
     */

    Server.prototype._boards = null;

    function Server(config, logger) {
      this.log = bind(this.log, this);
      var boardConfig, i, j, len, len1, notifierConfig, ref, ref1;
      this._logger = logger;
      this.log('debug', 'Construct board objects was started.');
      this._boards = {};
      ref = config.boards;
      for (i = 0, len = ref.length; i < len; i++) {
        boardConfig = ref[i];
        this._boards[boardConfig.name] = new Board(this, boardConfig);
      }
      this.log('debug', 'Construct board objects was finished.');
      this.log('debug', "Construct Notifier objects was started.");
      ref1 = config.notifiers;
      for (j = 0, len1 = ref1.length; j < len1; j++) {
        notifierConfig = ref1[j];
        a;
      }
      this.log('debug', "Construct Notifier objects was finished.");
    }

    Server.prototype.log = function() {
      var args, level, ref;
      level = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];
      return (ref = this._logger).log.apply(ref, [level].concat(slice.call(args)));
    };

    return Server;

  })();

  module.exports = Server;

}).call(this);

//# sourceMappingURL=Server.js.map
