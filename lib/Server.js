// Generated by CoffeeScript 1.10.0
(function() {
  var Base, Board, Notifier, Server,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Base = require('./Base');

  Board = require('./Board');

  Notifier = require('./notifiers/Notifier');

  Server = (function(superClass) {
    extend(Server, superClass);


    /**
     * @override
     */

    Server.prototype.TYPE = 'Server';


    /**
     * @protected
     * @type {Object.<Board>}
     */

    Server.prototype._boards = null;


    /**
     * @protected
     * @type {Object.<Notifier>}
     */

    Server.prototype._notifiers = null;

    function Server(config, logger, index) {
      var boardConfig, i, j, k, len, len1, notifierConfig, ref, ref1;
      Server.__super__.constructor.call(this, null, config, index, logger);
      this.checkConfig(config.boards, 'config.boards', 'array');
      this.log('debug', 'Construct board objects was started.');
      this._boards = {};
      i = 0;
      ref = config.boards;
      for (j = 0, len = ref.length; j < len; j++) {
        boardConfig = ref[j];
        this._boards[boardConfig.name] = new Board(this, boardConfig, i++);
      }
      this.log('debug', 'Construct board objects was finished.');
      this.checkConfig(config.notifiers, 'config.notifiers', 'array');
      this.log('debug', "Construct Notifier objects was started.");
      this._notifiers = {};
      i = 0;
      ref1 = config.notifiers;
      for (k = 0, len1 = ref1.length; k < len1; k++) {
        notifierConfig = ref1[k];
        this._notifiers[notifierConfig.name] = new Notifier(this, notifierConfig, i++);
      }
      this.log('debug', "Construct Notifier objects was finished.");
    }

    return Server;

  })(Base);

  module.exports = Server;

}).call(this);

//# sourceMappingURL=Server.js.map
