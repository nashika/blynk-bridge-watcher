// Generated by CoffeeScript 1.10.0
(function() {
  var Bridge, BridgeEvent, core,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  core = require('./core');

  BridgeEvent = require('./BridgeEvent');

  Bridge = (function(superClass) {
    extend(Bridge, superClass);


    /**
     * @override
     */

    function Bridge(board, config, vPin) {
      this.connect = bind(this.connect, this);
      core.logger.debug("Construct " + config.name + " bridge objects was started.");
      Bridge.__super__.constructor.call(this, board, config, vPin);
      core.logger.debug("Construct '" + this.name + "' bridge objects was finished.");
    }


    /**
     * @override
     */

    Bridge.prototype.connect = function() {
      core.logger.info("Connect '" + this.name + "' bridge was started.");
      Bridge.__super__.connect.call(this);
      return core.logger.info("Connect '" + this.name + "' bridge was finished.");
    };

    return Bridge;

  })(BridgeEvent);

  module.exports = Bridge;

}).call(this);

//# sourceMappingURL=Bridge.js.map
