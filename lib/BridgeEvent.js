// Generated by CoffeeScript 1.10.0
(function() {
  var BridgeEvent, BridgePing, core,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  core = require('./core');

  BridgePing = require('./BridgePing');

  BridgeEvent = (function(superClass) {
    extend(BridgeEvent, superClass);


    /**
     * @override
     */

    function BridgeEvent(board, config, vPin) {
      this._onNotify = bind(this._onNotify, this);
      BridgeEvent.__super__.constructor.call(this, board, config, vPin);
      this.on('$notify', this._onNotify);
    }

    BridgeEvent.prototype._onNotify = function(message) {
      return core.logger.info("Notify from '" + this.name + "' bridge, message='" + message + "'");
    };

    return BridgeEvent;

  })(BridgePing);

  module.exports = BridgeEvent;

}).call(this);

//# sourceMappingURL=BridgeEvent.js.map
