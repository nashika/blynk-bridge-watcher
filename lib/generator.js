// Generated by CoffeeScript 1.10.0
(function() {
  var Base, Generator,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Base = require('./base');

  Generator = (function(superClass) {
    extend(Generator, superClass);


    /**
     * @const
     * @type {Object}
     */

    Generator.prototype.TYPE_TO_CLASS = {};


    /**
     * @override
     */

    function Generator(parent) {
      this.generate = bind(this.generate, this);
      var config;
      config = {
        name: 'generator'
      };
      Generator.__super__.constructor.call(this, parent, config, -1);
    }

    Generator.prototype.generate = function(parent, config) {
      var type;
      type = this._checkConfig(config, 'type', 'string');
      if (this.TYPE_TO_CLASS[type]) {
        return new this.TYPE_TO_CLASS[type](parent, config);
      } else {
        this.log('fatal', "Generator type='" + type + "' is not defined.");
        return process.exit(1);
      }
    };

    return Generator;

  })(Base);

  module.exports = Generator;

}).call(this);

//# sourceMappingURL=generator.js.map
