// Generated by CoffeeScript 1.10.0
(function() {
  var LogNotifier, Notifier,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty,
    slice = [].slice;

  Notifier = require('Notifier');

  LogNotifier = (function(superClass) {
    extend(LogNotifier, superClass);

    function LogNotifier(parent, config, index) {
      this._onNotify = bind(this._onNotify, this);
      LogNotifier.__super__.constructor.call(this, parent, config, index);
    }

    LogNotifier.prototype._onNotify = function() {
      var args, level, options, ref;
      options = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];
      level = (ref = options != null ? options.level : void 0) != null ? ref : 'info';
      return this.log(level, this._makeMessage.apply(this, [options].concat(slice.call(args))));
    };

    return LogNotifier;

  })(Notifier);

}).call(this);

//# sourceMappingURL=LogNotifier.js.map
