// Generated by CoffeeScript 1.10.0
(function() {
  var LogNotifier, Notifier,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Notifier = require('./notifier');

  LogNotifier = (function(superClass) {
    extend(LogNotifier, superClass);

    function LogNotifier() {
      this._onSend = bind(this._onSend, this);
      return LogNotifier.__super__.constructor.apply(this, arguments);
    }


    /**
     * @override
     */

    LogNotifier.prototype._onSend = function(messages) {
      var i, len, message, results;
      results = [];
      for (i = 0, len = messages.length; i < len; i++) {
        message = messages[i];
        results.push(this.log('info', message));
      }
      return results;
    };

    return LogNotifier;

  })(Notifier);

  module.exports = LogNotifier;

}).call(this);

//# sourceMappingURL=log-notifier.js.map
