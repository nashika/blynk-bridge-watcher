mixin children(componentName, singularName, pluralName, mode)
  section(class!=pluralName)
    .header
      #{componentName}(v-if="status == 'stop'", :add="true", :brother-entities="#{pluralName}", :parent="this")
      h1 {{lodash.startCase('#{pluralName}')}}
    .body
      if mode == "tab"
        tabs(v-if="#{pluralName}")
          tab(v-for="#{singularName} in #{pluralName}", :header="#{singularName}.name")
            #{componentName}(:entity="#{singularName}", :brother-entities="#{pluralName}", :parent="this")
        .loading(v-if="!#{pluralName}") #[i.fa.fa-spinner.fa-pulse] Loading #{pluralName}...
        .nothing(v-if="#{pluralName} && #{pluralName}.length == 0") #[i.fa.fa-ban] No #{pluralName}
      if mode == "box"
        .boxes
          .box(v-for="#{singularName} in #{pluralName}")
            #{componentName}(:entity="#{singularName}", :brother-entities="#{pluralName}", :parent="this")
        .loading(v-if="!#{pluralName}") #[i.fa.fa-spinner.fa-pulse] Loading #{pluralName}...
        .nothing(v-if="#{pluralName} && #{pluralName}.length == 0") #[i.fa.fa-ban] No #{pluralName}

block variables

section(v-if="!add", :class="EntityClass.params.tableName")
  .header
    .menu
      dropdown(v-if="status == 'stop'")
        button.btn.btn-default.btn-sm.dropdown-toggle(slot="button", type="button") #[i.fa.fa-bars] #[i.fa.fa-caret-down]
        ul.dropdown-menu(slot="dropdown-menu")
          li
            a(@click="showEditModal = true") #[i.fa.fa-pencil] Edit
          if !isServer
            li
              a(@click="remove()") #[i.fa.fa-trash-o] Remove
            li(v-if="!isFirst")
              a(@click="move(false)") #[i.fa.fa-arrow-up] Move Up
            li(v-if="!isLast")
              a(@click="move(true)") #[i.fa.fa-arrow-down] Move Down
      button.btn.btn-default.btn-sm(type="button", @click="showLogs = true") #[i.fa.fa-terminal] {{logs.length}}
      button.btn.btn-success.btn-sm(v-if="status == 'ready'", type="button", @click="stop()") #[i.fa.fa-toggle-on]
      button.btn.btn-default.btn-sm(v-if="status == 'stop'", type="button", @click="start()") #[i.fa.fa-toggle-off]
      button.btn.btn-danger.btn-sm(v-if="status == 'error'", type="button") #[i.fa.fa-warning]
      button.btn.btn-default.btn-sm(v-if="status == 'connecting'", type="button") #[i.fa.fa-spinner.fa-pulse]
      button.btn.btn-warning.btn-sm(v-if="status == 'processing'", type="button") #[i.fa.fa-refresh.fa-spin]
    tooltip(placement="bottom", :content="title")
      h1
        i.fa(:class="'fa-' + EntityClass.params.icon")
        | &nbsp;{{title}}
  .body
    block body
  logs-component(:show.sync="showLogs", :logs="logs")
.add(v-else)
  button.btn.btn-success(v-if="EntityClass.params.tableName == EntityClass.params.entityName",
  type="button", @click="showEditModal = true") #[i.fa.fa-plus] Add {{lodash.startCase(EntityClass.params.entityName)}}
  button.btn.btn-success(v-else,
  type="button", @click="showEditModal = true") #[i.fa(:class="'fa-' + EntityClass.params.icon")] {{lodash.startCase(EntityClass.params.entityName)}}
modal(title="Edit", :show.sync="showEditModal", effect="fade")
  .modal-body(slot="modal-body")
    form(v-if="editEntity && showEditModal", @submit.prevent="edit()")
      .form-group(v-for="(fieldName, field) in EntityClass.params.fields")
        div(v-if="!field.hidden")
          label {{lodash.startCase(fieldName)}}
          input.form-control(v-if="field.type == 'text'", type="text", v-model="editEntity[fieldName]", :required="field.required", :disabled="field.disabled", :placeholder="field.default")
          input.form-control(v-if="field.type == 'number'", type="number", v-model="editEntity[fieldName]", :required="field.required", :disabled="field.disabled", :placeholder="field.default")
          select.form-control(v-if="field.type == 'select'", v-model="editEntity[fieldName]", :disabled="field.disabled")
            option(v-for="(key, label) in field.options", :value="key") {{label}}
          select.form-control(v-if="field.type == 'node'", v-model="editEntity[fieldName]", :disabled="field.disabled")
            option(v-if="!field.required", :value="undefined") Empty
            option(v-for="(_id, label) in getNodeOptions(field.filter)", :value="_id") {{label}}
      button.btn.btn-primary.btn-block(type="submit") Submit
  .modal-footer(slot="modal-footer")
    button.btn.btn-default(type="button", @click="showEditModal = false") Close
